def permuteUnique(nums):
    def backtrack(path, used):
        if len(path) == len(nums):
            result.append(path[:])
            return
        for i in range(len(nums)):
            if used[i]:
                continue
            if i > 0 and nums[i] == nums[i - 1] and not used[i - 1]:
                continue
            used[i] = True
            path.append(nums[i])
            backtrack(path, used)
            path.pop()
            used[i] = False
    nums.sort()
    result = []
    backtrack([], [False] * len(nums))
    return result
# Example usage
nums = [1, 1, 2]
print(permuteUnique(nums))  # Output: [[1, 1, 2], [1, 2, 1], [2, 1, 1]]
