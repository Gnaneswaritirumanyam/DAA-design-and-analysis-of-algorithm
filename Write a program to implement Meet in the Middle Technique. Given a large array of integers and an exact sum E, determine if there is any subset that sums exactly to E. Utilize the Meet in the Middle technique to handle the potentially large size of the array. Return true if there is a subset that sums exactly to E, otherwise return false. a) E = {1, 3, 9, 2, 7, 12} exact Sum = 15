from itertools import combinations
def generate_subset_sums(arr):
    subset_sums = set()
    n = len(arr)
    for r in range(n + 1):
        for combo in combinations(arr, r):
            subset_sums.add(sum(combo))
    return subset_sums
def can_sum_exactly(arr, target):
    n = len(arr)
    mid = n // 2
    left_half = arr[:mid]
    right_half = arr[mid:]
    left_sums = generate_subset_sums(left_half)
    right_sums = generate_subset_sums(right_half)
    for left_sum in left_sums:
        if (target - left_sum) in right_sums:
            return True
    return False

# Example usage
arr = [1, 3, 9, 2, 7, 12]
target_sum = 15

result = can_sum_exactly(arr, target_sum)
print(f"Is there a subset that sums exactly to {target_sum}? {result}")
