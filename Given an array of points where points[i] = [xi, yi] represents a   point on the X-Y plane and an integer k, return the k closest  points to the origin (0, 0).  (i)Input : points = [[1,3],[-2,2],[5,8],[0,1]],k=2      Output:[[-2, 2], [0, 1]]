import heapq
def k_closest_points(points, k):
    max_heap = []
    for point in points[:k]:
        distance = - (point[0] ** 2 + point[1] ** 2)  # Use negative distance for max-heap
        heapq.heappush(max_heap, (distance, point))
    for point in points[k:]:
        distance = - (point[0] ** 2 + point[1] ** 2)
        if distance > max_heap[0][0]:  # If the current distance is smaller than the largest in the heap
            heapq.heappop(max_heap)  # Remove the farthest point
            heapq.heappush(max_heap, (distance, point))
    result = [point for _, point in max_heap]
    return result

# Example usage
points = [[1, 3], [-2, 2], [5, 8], [0, 1]]
k = 2
print(k_closest_points(points, k))  # Output: [[-2, 2], [0, 1]]
